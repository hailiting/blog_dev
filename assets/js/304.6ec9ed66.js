(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{727:function(e,t,a){"use strict";a.r(t);var s=a(44),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"linux-常见错误集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux-常见错误集"}},[e._v("#")]),e._v(" Linux 常见错误集")]),e._v(" "),a("h2",{attrs:{id:"unable-to-locate-package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unable-to-locate-package"}},[e._v("#")]),e._v(" "),a("code",[e._v("Unable to locate package")])]),e._v(" "),a("p",[e._v("当使用 apt-get 更新软件包出现这个错误的时候，先更新\n"),a("code",[e._v("sudo apt-get update")]),e._v("\n然后在安装需要的功能")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("sudo apt-get install apache2\nsudo apt-get install mysql-server mysql-client\nsudo apt-get install vim-gtk\n")])])]),a("h2",{attrs:{id:"make-no-rule-to-make-target-build-needed-by-default-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#make-no-rule-to-make-target-build-needed-by-default-stop"}},[e._v("#")]),e._v(" "),a("code",[e._v("make: *** No rule to make target 'build', needed by 'default'. Stop.")])]),e._v(" "),a("p",[e._v("我放弃了 直接用 yum 安装了\n出现这个情况是因为 linux 系统没安装先决条件")]),e._v(" "),a("ol",[a("li",[e._v("GCC -- GNU 编译器集合\nGCC 可以使用默认包管理器的仓库（repositories）来安装，包管理器的选择依赖于你使用的 Linux 发布版本不同，包管理器有不同的实现：yum 是基于 RedHat 的发布版本，apt 用于 Debian 和 Ubunttu，yast 用于 SuSELinux 等等。\n"),a("code",[e._v("yum install gcc")]),e._v(" "),a("code",[e._v("apt-get install gcc")])]),e._v(" "),a("li",[e._v("PCRE\npcre 提供编译版本的库\npcre-devel 提供开发阶段的头文件和编译项目的源代码\n"),a("code",[e._v("yum install pcre pcre-devel")]),e._v(" "),a("code",[e._v("apt-get install libpcre3 libpcre3-dev")])]),e._v(" "),a("li",[e._v("zlib 库\nzliB 库提供开发人员压缩算法，在 Nginx 的各种模块中需要使用 gzip 压缩。\n"),a("code",[e._v("yum install zlib zlib-devel")]),e._v(" "),a("code",[e._v("apt-get install zlib1g zlib1g-dev")])]),e._v(" "),a("li",[e._v("OpenSSL 库\n在 Nginx，如果服务器提供安全网页时会用到 OpenSSL 库\n"),a("code",[e._v("yum install openssl openssl-devel")]),e._v(" "),a("code",[e._v("apt-get install openssl openssl-dev")])])]),e._v(" "),a("h2",{attrs:{id:"nginx-emerg-bind-to-0-0-0-0-80-failed-98-address-already-in-use"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-emerg-bind-to-0-0-0-0-80-failed-98-address-already-in-use"}},[e._v("#")]),e._v(" "),a("code",[e._v("nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)")])]),e._v(" "),a("p",[a("code",[e._v("yum install iptables-services")]),e._v(" "),a("code",[e._v("systemctl mask firewalld.service")]),e._v(" "),a("code",[e._v("systemctl enable iptables.service")]),e._v(" "),a("code",[e._v("systemctl enable ip6tables.service")]),e._v(" "),a("code",[e._v("vim /etc/sysconfig/iptables")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# sample configuration for iptables service\n# you can edit this manually or use system-config-firewall\n# please do not ask us to add additional ports/services to this default configuration\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 21 -j ACCEPT #add\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT  #add\n-A INPUT -p tcp -m state --state NEW -m tcp --dport 30000:30999 -j ACCEPT  #add\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n")])])]),a("p",[a("code",[e._v("systemctl restart iptables.service")]),e._v(" "),a("code",[e._v("systemctl start firewalld")]),e._v(" "),a("code",[e._v("firewall-cmd --permanent --add-service=http")]),e._v(" 开启 http 访问\n"),a("code",[e._v("firewall-cmd --permanent --zone=trusted --add-port=80/tcp")]),e._v(" 加入 80 端口")]),e._v(" "),a("h3",{attrs:{id:"端口被占用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#端口被占用"}},[e._v("#")]),e._v(" 端口被占用")]),e._v(" "),a("p",[a("code",[e._v("killall -9 nginx")]),e._v(" "),a("code",[e._v("nginx")]),e._v(" "),a("code",[e._v("ps aux|grep nginx")]),e._v(" 查看 nginx 启动情况")]),e._v(" "),a("h3",{attrs:{id:"brew-install-mongodb-unknown-or-unsupported-macos-version-mountain-lion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#brew-install-mongodb-unknown-or-unsupported-macos-version-mountain-lion"}},[e._v("#")]),e._v(" brew install mongodb "),a("code",[e._v("unknown or unsupported macOS version: :mountain_lion")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("brew uninstall mongodb\nbrew tap mongodb/brew\nbrew install mongodb-community\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);