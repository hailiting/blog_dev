(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{464:function(t,n,e){"use strict";e.r(n);var a=e(44),r=Object(a.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"gesturedetetor-类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gesturedetetor-类"}},[t._v("#")]),t._v(" GestureDetetor 类")]),t._v(" "),e("h2",{attrs:{id:"gesturedetetor-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gesturedetetor-简介"}},[t._v("#")]),t._v(" GestureDetetor 简介")]),t._v(" "),e("p",[t._v("GestureDetector 是检测手势的 widget。如果 GestureDetector 的 child 属性不空，GestureDetector 的大小设置为 child 的大小。如果 child 属性为空，它将自己的大小设置为父组件的大小。")]),t._v(" "),e("h5",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" demo")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("GestureDetector(\n    onTap: (){\n        setState((){_light=true});\n    },\n    child: Container(\n        color: Colors.yellow,\n        child: Text('Turn lights on'),\n    )\n)\n")])])]),e("h3",{attrs:{id:"gesturedestector-的一些属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gesturedestector-的一些属性"}},[t._v("#")]),t._v(" GestureDestector 的一些属性")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("/**\n    GestureDetector({\n    Key key,\n    this.child,\n    this.onTapDown,//可能导致点击的指针已联系到屏幕的特定位置\n    this.onTapUp,//触发点的指针已停止在特定位置与屏幕联系\n    this.onTap,//发生了点击。\n    this.onTapCancel,//触发onTapDown的指针取消触发\n    this.onDoubleTap,//双击\n    this.onLongPress,//长按\n    this.onLongPressUp,//长按结束\n    this.onVerticalDragDown,//\n    this.onVerticalDragStart,//指针已经接触到屏幕，而且可能开始垂直移动。\n    this.onVerticalDragUpdate,//与屏幕接触并垂直移动的指针沿垂直方向移动\n    this.onVerticalDragEnd,//以前与屏幕接触并垂直移动的指针不再与屏幕接触，并且当其停止接触屏幕时以特定速度移动。\n    this.onVerticalDragCancel,//\n    this.onHorizontalDragDown,//\n    this.onHorizontalDragStart,//\n    this.onHorizontalDragUpdate,//\n    this.onHorizontalDragEnd,//\n    this.onHorizontalDragCancel,//\n\n//    onPan可以取代onVerticalDrag或者onHorizontalDrag，三者不能并存\n    this.onPanDown,//指针已经接触屏幕并开始移动\n    this.onPanStart,//与屏幕接触并移动的指针再次移动\n    this.onPanUpdate,//先前与屏幕接触并移动的指针不再与屏幕接触，并且当它停止接触屏幕时以特定速度移动\n    this.onPanEnd,//先前触发 onPanDown 的指针未完成\n    this.onPanCancel,//\n\n//    onScale可以取代onVerticalDrag或者onHorizontalDrag，三者不能并存，不能与onPan并存\n    this.onScaleStart,//\n    this.onScaleUpdate,//\n    this.onScaleEnd,//\n    this.behavior,\n    this.excludeFromSemantics = false\n    })\n */\n")])])])])}),[],!1,null,null,null);n.default=r.exports}}]);