(window.webpackJsonp=window.webpackJsonp||[]).push([[312],{735:function(n,a,t){"use strict";t.r(a);var e=t(44),s=Object(e.a)({},(function(){var n=this,a=n.$createElement,t=n._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"nginx-下载安装部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-下载安装部署"}},[n._v("#")]),n._v(" nginx 下载"),t("em",[n._v("安装")]),n._v("部署")]),n._v(" "),t("h4",{attrs:{id:"_1-先安装-homebrew"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-先安装-homebrew"}},[n._v("#")]),n._v(" 1, 先安装 homebrew")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"\n')])])]),t("h4",{attrs:{id:"_2-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-nginx"}},[n._v("#")]),n._v(" 2，Nginx")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("brew install nginx\n")])])]),t("h4",{attrs:{id:"_3-启动-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-启动-nginx"}},[n._v("#")]),n._v(" 3，启动 Nginx")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("sudo  /usr/local/Cellar/nginx/1.15.8/bin/nginx  -c /usr/local/etc/nginx/nginx.conf\nsudo nginx  -c /usr/local/etc/nginx/nginx.conf\n")])])]),t("h4",{attrs:{id:"常见错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见错误"}},[n._v("#")]),n._v(" 常见错误")]),n._v(" "),t("h5",{attrs:{id:"配置文件地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件地址"}},[n._v("#")]),n._v(" 配置文件地址")]),n._v(" "),t("p",[n._v("/usr/local/etc/nginx/nginx.conf")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("//  nginx: [emerg] bind() to 0.0.0.0:80 failed (13: Permission denied)\n端口号太小，改 1024 以上端口\nserver {\n  listen:  8080\n  ...\n}\n// nginx: [emerg] bind() to 0.0.0.0:80 failed (48: Address already in use)\nsudo nginx -s stop 或 sudo nginx -s stop\n")])])]),t("h4",{attrs:{id:"_1-安装工具包-wget、vim-和-gcc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装工具包-wget、vim-和-gcc"}},[n._v("#")]),n._v(" 1,安装工具包 wget、vim 和 gcc")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("yum install -y wget\nyum install -y vim-enhanced\nyum install -y make cmake gcc gcc-c++\n")])])]),t("h4",{attrs:{id:"_2-下载-nginx-安装包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-下载-nginx-安装包"}},[n._v("#")]),n._v(" 2,下载 nginx 安装包")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("wget http://nginc.org/download/nginx-1.6.2.tar.gz\n")])])]),t("h4",{attrs:{id:"_3-安装依赖包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装依赖包"}},[n._v("#")]),n._v(" 3,安装依赖包")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("yum install -y pcre pcre-devel\nyum install -y zlib zlib-devel\nyum install -y openssl openssl-devel\n")])])]),t("h4",{attrs:{id:"_4-解压-nginx-1-6-2-tar-gz-到-usr-local-目录下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-解压-nginx-1-6-2-tar-gz-到-usr-local-目录下"}},[n._v("#")]),n._v(" 4,解压 nginx-1.6.2.tar.gz 到/usr/local/目录下")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("tar -zxvf nginx-1.6.2.tar.gz -C /usr/local/\n")])])]),t("h4",{attrs:{id:"_5-进行-configure-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-进行-configure-配置"}},[n._v("#")]),n._v(" 5,进行 configure 配置")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("./configure --prefix=/usr/local/nginx\n")])])]),t("h4",{attrs:{id:"_6-编译安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-编译安装"}},[n._v("#")]),n._v(" 6,编译安装")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("make && make install\n")])])]),t("h4",{attrs:{id:"_7-启动-nginx-启动完-检查-nginx-是否正常启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-启动-nginx-启动完-检查-nginx-是否正常启动"}},[n._v("#")]),n._v(" 7,启动 nginx,启动完，检查 nginx 是否正常启动")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("# 启动命令\n/user/local/nginx/sbin/nginx\n# 查看是否被正常启动\nps -ef | grep nginx\n# 关闭nginx\n/user/local/nginx/sbin/nginx -s stop\n# 重新热启动nginx\n/user/local/nginx/sbin/nginx -s reload\n")])])]),t("h4",{attrs:{id:"_8-配置防火墙-nginx-默认端口是-80"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-配置防火墙-nginx-默认端口是-80"}},[n._v("#")]),n._v(" 8,配置防火墙，nginx 默认端口是 80")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("firewall-cmd --zone=public --add-port=80/tcp --permanent\nfirewall-cmd --reload\n")])])]),t("h4",{attrs:{id:"_9-测试-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-测试-nginx"}},[n._v("#")]),n._v(" 9,测试 nginx")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("ip addr 获取到ip地址\n在网页打开ip\n")])])]),t("h4",{attrs:{id:"_10-学习-nginx-配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-学习-nginx-配置"}},[n._v("#")]),n._v(" 10,学习 nginx 配置")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('# 开启进程数 <=CPU核数\nworker_processes 1;\n\n# 错误日志保存位置\nerror_log logs/error.log;\nerror_log logs/error.log notice; # 警告\nerror_log logs/error.log info; # 基本信息\n\n# 进程号保存文件\n# pid logs/nginx.pid;\n\n# 每个进程最大连接数（最大连接=连接数*进程数）每个worker容许同时产生多少个链接，默认1024个\nevents{\n  worker_connections 1024;\n}\n\x3c!-- --------------- --\x3e\nhttp{\n  include mine.types;\n  default_type application/octet-stream;\n  # log_format main \'$remote_addr - $remote_user [$time_local] "$request"\'\n  #                 \'$status $body_bytes_sent "$http_referer"\'\n  #                 \'"$http_user_agent" "$http_x_forwarded_for"\';\n  #access_log logs/access.log main;\n  sendfile on;\n  #tcp_nopush on;\n  keepalive_timeout 65;\n  #gzip on;\n  server {\n    listen 8080;\n    server_name localhost;\n    #charset koi8-r;\n    #access_log logs/host.access.log main;\n    location /{\n      root html; # html 文件夹\n      index index.htmml index.htm\n    }\n    #error_page 404 /404.html; #控制出错\n    #redirect server error pages to the static page /50x.html\n    error_page 500 502 503 504 /50x.html;\n    location = /50x.html{\n      root html;\n    }\n    #proxy the PHP scripts to Apache listening on 127.0.0.1:80\n    #location ~ \\.php${\n    # proxy_pass http://127.0.0.1;\n    #}\n    #pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n    #location ~ \\.php$ {\n    #  root html;\n    #  fastcgi_pass 127.0.0.1:9000;\n    #  fastcgi_index index.php;\n    #  fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name;\n    #  include fastcgi_params;\n    #}\n    #deny access to .htaccess files, if Apache\'s document root\n    #concurs with nginx\'s one\n    #location ~/\\.ht{\n    #  deny all;\n    #}\n  }\n  #server{\n  #  listen 8000;\n  #  listen somename:8080;\n  #  server_name somename alias another.alias;\n  #  location / {\n  #}\n  }\n}\n\x3c!-- --------------- --\x3e\nhttp{\n  # 开启gzip\n  # gzip on;\n  # 开启etag\n  # etag on;\n  #监听端口，默认是80端口\n  listen       80;\n  #监听域名\n  server_name  localhost;\n\n  #charset koi8-r;\n\n  #nginx访问日志放在logs/host.access.log下，并且使用main格式（还可以自定义格式）\n  #access_log  logs/host.access.log  main;\n\n  #如果没有location更明确的匹配访问路径的话，访问请求都会被该location处理。\n  location / {\n      #root指定nginx的根目录为/usr/local/nginx/html\n      root   html;\n      #默认访问文件，欢迎页先去html目录下找index.html，如果找不到再去找index.htm\n      index  index.html index.htm;\n  }\n\n  #error_page  404              /404.html;\n  # redirect server error pages to the static page /50x.html\n  #\n\n  #错误页面及其返回地址，错误码为500、502、503、504都会返回50.html错误页面。\n  error_page   500 502 503 504  /50x.html;\n  #location后面是"="的话，说明是精确匹配\n  location = /50x.html {\n      root   html;\n  }\n}\n\n')])])]),t("h6",{attrs:{id:"nginx-可以启动多个端口-每个端口制定不同的端口号和资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-可以启动多个端口-每个端口制定不同的端口号和资源"}},[n._v("#")]),n._v(" nginx 可以启动多个端口，每个端口制定不同的端口号和资源")])])}),[],!1,null,null,null);a.default=s.exports}}]);