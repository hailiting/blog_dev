(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{716:function(t,a,s){"use strict";s.r(a);var r=s(44),h=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"https-加密握手的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-加密握手的过程"}},[t._v("#")]),t._v(" Https 加密握手的过程")]),t._v(" "),s("h2",{attrs:{id:"https-的由来"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-的由来"}},[t._v("#")]),t._v(" Https 的由来")]),t._v(" "),s("p",[t._v("https 是在 http 基础上加了 SSL，而 SSL 是在 TCP 基础上做了安全加强。")]),t._v(" "),s("h3",{attrs:{id:"http-有啥不好-才产生的-https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-有啥不好-才产生的-https"}},[t._v("#")]),t._v(" http 有啥不好，才产生的 HTTPS")]),t._v(" "),s("ol",[s("li",[t._v("HTTP 采用明文传输，没有隐私")]),t._v(" "),s("li",[t._v("HTTP 不验证通信双方身份，容易被三方截取")]),t._v(" "),s("li",[t._v("HTTP 无法验证报文的完整性，报文可以被篡改")])]),t._v(" "),s("h3",{attrs:{id:"那什么是-https-呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#那什么是-https-呢"}},[t._v("#")]),t._v(" 那什么是 HTTPS 呢")]),t._v(" "),s("p",[t._v("HTTP+加密+认证+完整性保护 = HTTPS")]),t._v(" "),s("h4",{attrs:{id:"ssl-协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssl-协议"}},[t._v("#")]),t._v(" SSL 协议")]),t._v(" "),s("p",[t._v("SSL 是在不安全的 TCP 上做了安全加强，因此不能说 SSL 是新的传输层协议，同样有不能说 HTTPS 是新的应用层协议，他们只是在不安全的基础上做了安全加强。")]),t._v(" "),s("h4",{attrs:{id:"http-协议通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http-协议通信"}},[t._v("#")]),t._v(" HTTP 协议通信")]),t._v(" "),s("p",[t._v("传统的 HTTP 报文是直接将报文信息传输到 TCP，然后 TCP 在通过 TCP 套接字发送到目的主机上。")]),t._v(" "),s("h4",{attrs:{id:"https-协议通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-协议通信"}},[t._v("#")]),t._v(" HTTPS 协议通信")]),t._v(" "),s("p",[t._v("HTTP 报文信息 -》 SSL 套接字加密-》SSL 加密后的报文发送给 TCP 套接字-》TCP 套接字将加密后的报文发送到目的主机-》目的主机把加密后的报文给 SSL 套接字，SSL 解密后交给对应进程。")]),t._v(" "),s("h5",{attrs:{id:"这也是一次握手过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#这也是一次握手过程"}},[t._v("#")]),t._v(" 这也是一次握手过程")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(" Client                                          Server\n  ---——————----------------请求网址----------\x3e 证书公钥 证书私钥\n  <--------------------------返回证书公钥------\n验证证书是否有效\n  |--无效---\x3e 弹出警告框\n  |\n 有效\n  |\n生成一个随机值\n  |\n用证书的公钥加密随机值【密钥】------将加密后的密钥发送给服务端----\x3e用私钥解密密钥\n                                                      |\n                                                     密钥\n                                                      |\n用密钥解密信息   <-----将加密后的内容发送给客户端---- 用密钥加密要发送的内容\n")])])]),s("h4",{attrs:{id:"共享密钥加密【对称密钥加密】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享密钥加密【对称密钥加密】"}},[t._v("#")]),t._v(" 共享密钥加密【对称密钥加密】")]),t._v(" "),s("p",[t._v("用相同密钥对报文加密解密，那个解决如何把密钥安全的交给解密方")]),t._v(" "),s("h4",{attrs:{id:"公开密钥加密【非对称加密】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公开密钥加密【非对称加密】"}},[t._v("#")]),t._v(" 公开密钥加密【非对称加密】")]),t._v(" "),s("p",[t._v("有两个密钥，一个公钥，一个私钥，公钥加密的只能私钥解开，私钥加密的只能公钥解开")]),t._v(" "),s("h4",{attrs:{id:"证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#证书"}},[t._v("#")]),t._v(" 证书")]),t._v(" "),s("p",[t._v("共有密钥不是服务器随便产生的，而是服务器的运维人员向数字证书认证机构申请的。\n客户端向服务器要共有秘钥，服务器把公钥证书发送给客户，客户获取到密钥得到签名，然后向数字认证机构进行确认，数字认证机构确认该签名无误后，客户采用共有秘钥进行加密")])])}),[],!1,null,null,null);a.default=h.exports}}]);