(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{677:function(t,e,n){"use strict";n.r(e);var s=n(44),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"前端微服务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端微服务"}},[t._v("#")]),t._v(" 前端微服务")]),t._v(" "),n("h2",{attrs:{id:"微前端是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#微前端是什么"}},[t._v("#")]),t._v(" 微前端是什么")]),t._v(" "),n("p",[t._v("微前端框架是一种类似于微服务的架构，他将微服务理念应用于浏览器端，即将 Web 应用由单一的单位应用转变为多个小型的前端应用聚合为一的应用。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("                    用 户\n                      |\n                   底层路由\n                   消息总线\n                  模块加载器  // 核心，主要用于调度子应用，决定何时展示哪一个子应用，可以理解为电源\n    |-----------------|------------|-------------|\nBase前端基础模块    前端模块1      前端模块2       前端模块3\n                      |            |             |\n                  Service 1    Service 2      Service 3\n【https://www.cnblogs.com/scdisplay/p/11648701.html#!comments】\n电(加载器) -> 电线(包装器) -> 电器底座(主应用) -> 电器(子应用)\n")])])]),n("h3",{attrs:{id:"涉及到的知识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#涉及到的知识"}},[t._v("#")]),t._v(" 涉及到的知识")]),t._v(" "),n("h4",{attrs:{id:"systemjs-加载器-不用这个好像也可以-用-fetch-等请求子模块之后加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#systemjs-加载器-不用这个好像也可以-用-fetch-等请求子模块之后加载"}},[t._v("#")]),t._v(" SystemJs(加载器) // 不用这个好像也可以 用 fetch 等请求子模块之后加载")]),t._v(" "),n("h4",{attrs:{id:"singlespa-包装器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#singlespa-包装器"}},[t._v("#")]),t._v(" singleSpa(包装器)")]),t._v(" "),n("p",[n("a",{attrs:{href:"!https://gitee.com/Janlaywss/vue-single-spa"}},[t._v("Vue 为主模块的 demo")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// 主应用文件\n<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width,initial-scale=1.0" />\n    <meta http-equiv="X-UA-Compatible" content="ie=edge" />\n    <title>demo</title>\n    <script type="systemjs-importmap">\n      {\n        "imports":{\n          "navbar": "http://localhost:8080/app.js",\n          "single-spa": "https://cdnjs.cloudflare.com/ajax/libs/single-spa/4.3.7/system/single-spa.min.js"\n        }\n      }\n    <\/script>\n    // link rel="preload" 预加载 as="script" crossorigin="anonymous" 支持跨域\n    <link rel="preload" href="https://cdn.jsdelivr.net/npm/systemjs/dist/system.js" as="script" crossorigin="anonymous" />\n    <script src="https://cdn.jsdelivr.net/npm/systemjs/dist/system.js"><\/script>\n    <script src="https://cdn.jsdelivr.net/npm/systemjs/dist/extras/amd.js"><\/script>\n    <script>\n      (function(){\n        System.import("single-spa")\n        .then((res)=>{\n          var singleSpa = res;\n          // 加载子项目入口js文件(模块加载)\n          const loadingFunction = ()=> System.import("navbar");\n          // 当url前缀为 /react的时候，返回true（）\n          // location=> location.pathname.startsWith(\'/nav\');\n          const activityFunction = location=>true;\n          // 注册应用\n          singleSpa.registerApplication(\'nav\', loadingFunction, activityFunction)\n          // singleSpa 启动\n          singleSpa.start();\n        })\n      })()\n    <\/script>\n  </head>\n</html>\n')])])]),n("h3",{attrs:{id:"子模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#子模块"}},[t._v("#")]),t._v(" 子模块")]),t._v(" "),n("h4",{attrs:{id:"react"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" react")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import React from "react";\nimport React from "react-dom";\nimport singleSpaReact from "single-spa-react";\nimport RootComponent from "./root.component";\n\nif(process.env.NODE_ENV === \'develop\'){\n  // 开发环境直接渲染\n  ReactDOM.render(<RootComponent />, document.getElementById("root"));\n}\n// 创造生命周期实例\nconst reactLifecycles = singleSpaReact({\n  React,\n  ReactDOM,\n  rootComponent: RootComponent,\n  demolementGetter: ()=>document.getElementById("root");\n})\n// 项目启动钩子\nexport const bootstrap = [\n  reactLifecycles.bootstrap,\n]\n// 项目启动后的钩子\nexport const mount = [\n  reactLifecycles.mount,\n]\n// 项目卸载的钩子\nexport const unmount = [\n  reactLifecycles.unmount,\n]\n')])])]),n("h4",{attrs:{id:"vue-cli-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli-3"}},[t._v("#")]),t._v(" vue-cli 3")]),t._v(" "),n("h4",{attrs:{id:"vue-config-js-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-config-js-配置"}},[t._v("#")]),t._v(" vue.config.js 配置")]),t._v(" "),n("p",[t._v("1，因为是用 systemjs 去加载模块的，所以要修改 webpack 的配置改成输出为 amd 规范")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('config.output.library = "single"\nconfig.output.libraryTarget="amd"\n')])])]),n("p",[t._v("2，配置一个 devServer 指定地址，以及设置 headers 容许跨域\n3，修改输出目录，关闭 hash 命名，关闭 map")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('const path = require("path");\nconst env = process.env.NODE_ENV;\nmodule.exports = {\n  configureWebpack: config=>{\n    config.output.library = "single";\n    config.output.libraryTarget = "amd";\n    config.entry={app:["./src/main.js"], store: "./src/Store.js"}\n    if(env === "production"){\n\n    } else {\n\n    }\n  },\n  // 输出目录\n  outputDir: path.resolve(__dirname, "./single"),\n  // 关闭hash\n  filenameHashing: false,\n  // 静态文件路径\n  productionSourceMap: false,\n  devServer: {\n    port: "8201",\n    headers: {\n      "Access-Control-Allow-Origin": "*",\n    }\n  }\n}\n')])])]),n("h4",{attrs:{id:"main-js-改造"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#main-js-改造"}},[t._v("#")]),t._v(" main.js 改造")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import Vue from "vue";\nimport App from "./App.vue";\nimport singleSpaVue from "single-spa-vue";\nimport store from "./store/index";\n\nVue.config.productionTip = false\n\n// 开发时候的\n// new Vue({\n//   render: h=> h(App)\n// }).$mount("#app")\n\n// single-spa配置\nconst vueLifecycles = singleSpaVue({\n  Vue,\n  appOptions: {\n    el: "#vue-app",\n    store,\n    render: h=>h(App)\n  }\n})\nexport const bootstrap = [\n  vueLifecycles.bootstrap,\n];\nexport function mount(props){\n  // redux传入Vuex\n  store.commit("setGlobalEventDistributor", props.globalEventDistributor)\n  store.commit("setStore", props.store)\n  createdemolement();\n  return vueLifecycles.mount(props);\n}\nexport const unmount = [\n  vueLifecycles.unmount,\n];\n\nfunction createdemolement(){\n  let el = window.document.getElementById(\'vue-app\');\n  if(!el){\n    el=window.document.createElement("div");\n    el.id="vue-app";\n    document.body.appendChild(el);\n  }\n  return el;\n}\n')])])]),n("h4",{attrs:{id:"store-js-用于各模块之间的通信-后续会详细介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#store-js-用于各模块之间的通信-后续会详细介绍"}},[t._v("#")]),t._v(" Store.js 用于各模块之间的通信，后续会详细介绍")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('import {createStore, combineReducers} from "redux";\nconst initalState = {\n  refresh: 0\n}\nfunction render(state = initialState, action){\n  switch(action.type){\n    case "REFRESH":\n      return {\n        ...state,\n        refresh: state.refresh+1\n      }\n    default:\n      return state\n  }\n}\nexport const storeInstance = createStore(\n  combineReducers({\n    namespace: ()=>"vue",\n    render\n  })\n)\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);