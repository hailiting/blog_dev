(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{468:function(e,t,n){"use strict";n.r(t);var r=n(44),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"基于shared-prefernces本存储操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基于shared-prefernces本存储操作"}},[e._v("#")]),e._v(" 基于"),n("code",[e._v("shared_prefernces")]),e._v("本存储操作")]),e._v(" "),n("h2",{attrs:{id:"shared-preferences是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shared-preferences是什么"}},[e._v("#")]),e._v(" "),n("code",[e._v("shared_preferences")]),e._v("是什么")]),e._v(" "),n("p",[e._v("页面缓存、从网络上获取数据本地持久化等都需要本地数据储存，shared_preferences 是 Flutter 社区开发的一个本地数据存取插件。")]),e._v(" "),n("ul",[n("li",[e._v("简单的，异步的，持久化的 key-value 存储系统")]),e._v(" "),n("li",[e._v("在 Android 上，它是基于"),n("code",[e._v("SharedPreferences")]),e._v("的")]),e._v(" "),n("li",[e._v("在 iOS 上它是基于"),n("code",[e._v("NSUserDefault")]),e._v("的")])]),e._v(" "),n("blockquote",[n("p",[e._v("sharedpreferences 类似于 RN 中的 AsyncStorage")])]),e._v(" "),n("h2",{attrs:{id:"如何使用shared-preferences"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何使用shared-preferences"}},[e._v("#")]),e._v(" 如何使用"),n("code",[e._v("shared_preferences")])]),e._v(" "),n("p",[e._v("1，在"),n("code",[e._v("pubspec.yaml")]),e._v("文件中添加")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("dependencies:\n    shared_preferences: ^0.5.1+\n")])])]),n("p",[e._v("2，运行"),n("code",[e._v("flutter packages get")]),e._v("\n3，导入")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import 'package:shared_preferences/shared_preferences.dart';\n")])])]),n("p",[e._v("4，添、删、改、查")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("final prefs = await SharedPreferences.getInstance();\n// set value\nprefs.setInt('counter', counter);\n// try reading data from the country key. if it does not exit, return 0.\nfinal counter = prefs.getInt('counter') ?? 0;\n// remove\nprefs.remove('counter');\n")])])]),n("h2",{attrs:{id:"shared-preferences常用的-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#shared-preferences常用的-api"}},[e._v("#")]),e._v(" "),n("code",[e._v("shared_preferences")]),e._v("常用的 API")]),e._v(" "),n("p",[e._v("存取相关的")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("setString(String key, String value);\nsetBool(String key, bool value);\nsetDouble(String key, double value);\nsetInt(String key, int value);\nsetStringList(String key, List value);\n")])])]),n("p",[e._v("读取相关的")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("get(String key);\ngetBool(String key);\ngetDouble(String key);\ngetInt(String key);\ngetKeys(String key);\ngetString(String key);\ngetStringList(String key);\ntoString();\n")])])]),n("h2",{attrs:{id:"基于shared-preferences实现计算器-demo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基于shared-preferences实现计算器-demo"}},[e._v("#")]),e._v(" 基于"),n("code",[e._v("shared_preferences")]),e._v("实现计算器 Demo")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import 'package:flutter/material.dart';\nimport 'package:shared_preferences/shared_preferences.dart';\nvoid main(){\n  runApp(MaterialApp(\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('shared_preferences'),\n        ),\n        body: _CounterWidget(),\n      )\n  ));\n}\nclass _CounterWidget extends StatefulWidget{\n  @override\n  _CounterState createState() =>  _CounterState();\n}\nclass _CounterState extends State<_CounterWidget>{\n  String countString = '';\n  String localCount = '';\n  @override\n  Widget build(BuildContext context){\n    return Center(\n        child: Column(\n            children: <Widget>[\n              RaisedButton(\n                  onPressed: _incrementCounter,\n                  child: Text('Increment Counter')\n              ),\n              RaisedButton(\n                  onPressed: _getCounter,\n                  child: Text('Increment Counter')\n              ),\n              Text(\n                countString,\n                style: TextStyle(fontSize: 20),\n              ),\n              Text(\n                  'result: '+localCount,\n                  style: TextStyle(\n                      fontSize: 20\n                  )\n              )\n            ]\n        )\n    );\n  }\n  _incrementCounter() async{\n    SharedPreferences prefs = await SharedPreferences.getInstance();\n    setState((){\n      countString = countString + '1';\n    });\n    int counter = (prefs.getInt('counter') ?? 0)+1;\n    await prefs.setInt('counter', counter);\n    print('countString： $counter');\n  }\n  _getCounter() async {\n    SharedPreferences prefs = await SharedPreferences.getInstance();\n    setState((){\n      localCount = prefs.getInt('counter').toString();\n    });\n  }\n}\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);