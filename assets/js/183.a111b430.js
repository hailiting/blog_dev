(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{591:function(t,e,a){"use strict";a.r(e);var n=a(44),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"rn-和-h5-交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rn-和-h5-交互"}},[t._v("#")]),t._v(" RN 和 h5 交互")]),t._v(" "),a("p",[t._v("react-native-webview")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("yarn add react-native-webview\nreact-native link react-native-webview\n")])])]),a("h2",{attrs:{id:"webview-的基本属性方法介绍和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webview-的基本属性方法介绍和使用"}},[t._v("#")]),t._v(" WebView 的基本属性方法介绍和使用")]),t._v(" "),a("h3",{attrs:{id:"主要属性介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要属性介绍"}},[t._v("#")]),t._v(" 主要属性介绍")]),t._v(" "),a("ul",[a("li",[t._v("source: 在 WebView 中载入一段静态的 html 代码或是传入一个 url（可以附带一些 header 选项）；")]),t._v(" "),a("li",[t._v("automaticallyAdjustContentInsets: 设置是否自动调整内容，默认值为 true；")]),t._v(" "),a("li",[t._v("contrntInset: 设置内容所占尺寸大小，格式：{top:number,left:number,bottom:number,right:number}；")]),t._v(" "),a("li",[t._v("injectedJavaScript(string): 当网页加载之前注入一段 js 代码，其值为字符串形式；")]),t._v(" "),a("li",[t._v("startInLoadingState: 是否开启页面加载的状态，值为 true 或 false；")]),t._v(" "),a("li",[t._v("bounces: 回弹特性。默认为 true，如果设置为 false，则内容拉到底部或头部都不回弹。")]),t._v(" "),a("li",[t._v("scalesPageToFit: 设置网页是否缩放自适应到整个屏幕视图，以及用户是否可以改变缩放页面；")]),t._v(" "),a("li",[t._v("scrollEnaled: 用于设置是否开启页面滚动；")]),t._v(" "),a("li",[t._v("domStorageEnable: 用于控制是否开启 DOM Storage(存储);")]),t._v(" "),a("li",[t._v("javaScriptEnabled: 是否开启 JavaScript,在 ios 中默认是开启的；")])]),t._v(" "),a("h3",{attrs:{id:"主要方法介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要方法介绍"}},[t._v("#")]),t._v(" 主要方法介绍")]),t._v(" "),a("ul",[a("li",[t._v("onNavigationStateChange: 当导航状态变化的时候调用；")]),t._v(" "),a("li",[t._v("onLoadStart: 当网页开始加载时调用；")]),t._v(" "),a("li",[t._v("onError: \b 当网页加载失败时调用；")]),t._v(" "),a("li",[t._v("onLoad: 当网页加载结束时调用；")]),t._v(" "),a("li",[t._v("onLoadEnd: 当页面加载结束时调用，不管成功还是失败；")]),t._v(" "),a("li",[t._v("renderLoading: WebView 组件正在渲染页面时触发的函数，只有 startInLoadingState 为 true 时，函数才起作用；")]),t._v(" "),a("li",[t._v("renderError: 监听渲染页面出错的函数；")]),t._v(" "),a("li",[t._v("onShouldStartLoadWithRequest: 该方法容许拦截 WebView 加载的 URL 地址，进行自定义处理，该方法通过返回 true 或 false 来决定是否继续加载该拦截到的请求；")]),t._v(" "),a("li",[t._v("onMessage: 在 WebView 内部网页中，调用 window.postMessage 可以触发此属性对应的函数， 通过 event.nativeEvent.data 获取接收到的数据，实现网页和 RN 之间的数据传递；")]),t._v(" "),a("li",[t._v("injectJavaScript(function): 函数接受一个字符串，该字符串将传递给 WebView，并立即 执行为 JavaScript;")])]),t._v(" "),a("h4",{attrs:{id:"通过-url-加载一个页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-url-加载一个页面"}},[t._v("#")]),t._v(" 通过 url 加载一个页面")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("render(){\n\treturn(\n\t\t<View style={styles.container}>\n\t\t\t<WebView\n\t\t\t\tref={webView=>this.webView=webView}\n\t\t\t\tstartInLoadingState={true}\n\t\t\t\tonNavigationStateChange={e=>this.onNavigationStateChange(e)}\n\t\t\t\tsource={{uri:'https://github.com/xxx'}}\n\t\t\t/>\n\t\t</View>\n\t)\n}\n")])])]),a("h4",{attrs:{id:"通过-html-加载一个页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通过-html-加载一个页面"}},[t._v("#")]),t._v(" 通过 HTML 加载一个页面")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("render(){\n\treturn (\n\t\t<View>\n\t\t\t<WebView\n\t\t\t\tref={webView=>this.webView=webView}\n\t\t\t\tstartInLoadingState={true}\n\t\t\t\tonNavigationStateChange={e=>this.onNavigationStateChange(e)}\n\t\t\t\tsource={{html:'<h1>demo</h1>'}}\n\t\t\t/>\n\t\t</View>\n\t)\n}\n")])])]),a("h2",{attrs:{id:"rn-webview-和-h5-之间的通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rn-webview-和-h5-之间的通信"}},[t._v("#")]),t._v(" RN WebView 和 H5 之间的通信")]),t._v(" "),a("h3",{attrs:{id:"rn-webview-向-h5-页面注入-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rn-webview-向-h5-页面注入-js"}},[t._v("#")]),t._v(" RN WebView 向 H5 页面注入 JS")]),t._v(" "),a("ul",[a("li",[t._v("通过 injectedJavaScript 的方式注入 JS，在 H5 页面加载后立即执行。（WebView 主动触发 H5 的方法，从而实现通信）")])]),t._v(" "),a("h4",{attrs:{id:"rn-向-h5-发送消息-h5-监听"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rn-向-h5-发送消息-h5-监听"}},[t._v("#")]),t._v(" RN 向 H5 发送消息，h5 监听")]),t._v(" "),a("p",[t._v("WebView 绑定 ref，通过 html5 新增的 postMessage 发送消息")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("onLoadEnd={()=>{\n\tthis.refs.webView.postMessage('RN向H5发送消息');\n}} // 页面加载结束调用\n")])])]),a("p",[t._v("在 H5 中注册监听")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("window.onload = function(){\n\tdocument.addEventListener('message', function(msg){\n\t\tconsole.log(msg)\n\t\tmessage = msg.data\n\t})\n}\n")])])]),a("h4",{attrs:{id:"h5-向-rn-发消息-rn-通过-onmessage-接收消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h5-向-rn-发消息-rn-通过-onmessage-接收消息"}},[t._v("#")]),t._v(" h5 向 RN 发消息，RN 通过 onMessage 接收消息")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("onMessage={(event)=>{console.log(event.nativeEvent.data);}} // data只能是字符串\n\n// h5\nwindow.postMessage('网页向RN发送消息');\n")])])]),a("h4",{attrs:{id:"webview-js-注入-h5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webview-js-注入-h5"}},[t._v("#")]),t._v(" webView js 注入 h5")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//  H5\n\x3c!-- 页面点击通信 --\x3e\nexport const invokeMethod = (type='',params = {}, callback)=>{\n\tif(!window.APP) return false;\n\treturn window.APP.invokeClientMethod(type, params, callback);\n}\n\x3c!-- 页面加载通信 --\x3e\nwindow.initDataFromApp = function(data){\n\t// 访问到store\n\t// window.g_app._store\n\t// 访问到 dispatch\n\twindow.g_app._store.dispatch({type:  'user/init',  data})\n}\n(兼容 浏览器cookie)\nif(!window.navigator.userAgent.includes('App')){\n\tconst token = cookie.load('JWT');\n\tif(token){\n\t\twindow.initDataFromApp({token: token})\n\t}\n}\n//  WebView\nfunction clientMethod(){\n\tvar APP =  {\n\t\t__GLOVAL_FUNC_INDEX__: 0,\n\t\tinvokeClientMethod: function(type,params, callback){\n\t\t\tvar name;\n\t\t\tif(callback){\n\t\t\t\tif(typeof callback ===  'function'){\n\t\t\t\t\tname= APP.createGlobalFuncForCallback(callback);\n\t\t\t\t} else{\n\t\t\t\t\tname=callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.ReactNativeWebView.postMessage(JSON.stringify({type,params,callback:name}))\n\t\t},\n\t\tcreateGlobalFuncForCallback:  function(callback){\n\t\t\tif(callback){\n\t\t\t\tvar callbackName = '__GLOBAL_CALLBACK__'+(ZGAPP.__GLOBAL_FUNC_INDEX__++);\n\t\t\t\twindow[callbackName] =  callback;\n\t\t\t\treturn callbackName;\n\t\t\t}\n\t\t\treturn  null;\n\t\t},\n\t\tinvokeWebMethod: function(callback, args){\n\t\t\tif(callback && typeof  callback==='string'){\n\t\t\t\tvar func  = void 0;\n\t\t\t\tif((func == window[callback])&& typeof func === 'function'){\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tfunc.call(this, args);\n\t\t\t\t\t},0)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\twindow.APP = APP;\n\twindow.webviewCallback = function(data){\n\t\twindow.APP['invokeWebMethod'](data.callback, data.args);\n\t};\n};\nconst patchPostMessageJsCode =  `(${String(clientMethod)})()`;\nconst data = {\n\t'token': token.jwt,\n\t'platform':  Platform.OS,\n}\nconst injectedJavaScript = `\n\t${patchPostMessageJsCode}\n\tinitDataFromApp && initDataFromApp(${JSON.stringify(data)});\n`\nonMessage=(event)=>{\n\tvar  data =  JSON.parse(event.nativeEvent.data);\n\tif(!data){\n\t\treturn;\n\t}\n\tconst {type,params, callback} = data;\n\tswitch(type){\n\t\tcase 'xxx':\n\t\t...\n\t\tbreak;\n\t\t...\n\t}\n}\n...\n<WebView\n\tonMessage =  {this.onMessage}\n\tref={r=>(this.webref =  r)}\n\tinjectedJavaScript =  {injectedJavaScript}\n\tsource= {{...}}\n/>\n...\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);