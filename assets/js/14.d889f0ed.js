(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{374:function(e,t,a){e.exports=a.p+"assets/img/flutter-widget-lifecycle.bc3f7953.png"},375:function(e,t,a){e.exports=a.p+"assets/img/flutter-app-lifecycle.4e2b97ff.png"},473:function(e,t,a){"use strict";a.r(t);var n=a(44),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"flutter-基础-生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flutter-基础-生命周期"}},[e._v("#")]),e._v(" Flutter 基础_生命周期")]),e._v(" "),n("h2",{attrs:{id:"widget"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#widget"}},[e._v("#")]),e._v(" Widget")]),e._v(" "),n("p",[n("img",{attrs:{src:a(374),alt:"flutter-widget-lifecycle.png"}})]),e._v(" "),n("div",{staticClass:"language-s extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("create widget\n构造函数\ninitState\ndidChangeDependencies\nbuild\n|-render tree  -> remove widget ->deactive -> dispose -> over\n| didUpdateWidget\n|-build\n\n// app切都后台再切回前台\ninactive\npaused\ninactive\nresumed\n")])])]),n("h3",{attrs:{id:"_1-创建-wedget-到显示-打印结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建-wedget-到显示-打印结果"}},[e._v("#")]),e._v(" 1, 创建 wedget 到显示，打印结果")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(": initState\n: didChangeDependencies\n: build\n")])])]),n("h3",{attrs:{id:"_2-退出这个页面执行"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-退出这个页面执行"}},[e._v("#")]),e._v(" 2, 退出这个页面执行")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(": deactivate\n: dispose\n")])])]),n("h3",{attrs:{id:"_3-点击热重载按钮"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-点击热重载按钮"}},[e._v("#")]),e._v(" 3, 点击热重载按钮")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(": reassemble\n: didUpdateWidget\n: build\n")])])]),n("h3",{attrs:{id:"_4-app-由显示到切换后台-home-状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-app-由显示到切换后台-home-状态"}},[e._v("#")]),e._v(" 4, app 由显示到切换后台（home 状态）")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(": AppLifecycleState.inactive\n: AppLifecycleState.paused\n")])])]),n("h3",{attrs:{id:"_5-app-由后台切回到前台"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-app-由后台切回到前台"}},[e._v("#")]),e._v(" 5, App 由后台切回到前台")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v(": AppLifecycleState.inactive\n: AppLifecycleState.resumed\n")])])]),n("h3",{attrs:{id:"flutter-页面生命周期实战指南"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flutter-页面生命周期实战指南"}},[e._v("#")]),e._v(" Flutter 页面生命周期实战指南")]),e._v(" "),n("h3",{attrs:{id:"statelesswidget-只有-createelement-build-两个生命周期方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#statelesswidget-只有-createelement-build-两个生命周期方法"}},[e._v("#")]),e._v(" StatelessWidget 只有 createElement, build 两个生命周期方法")]),e._v(" "),n("h3",{attrs:{id:"statefullwidget-生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#statefullwidget-生命周期"}},[e._v("#")]),e._v(" StatefullWidget 生命周期")]),e._v(" "),n("h4",{attrs:{id:"_1-初始化时期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-初始化时期"}},[e._v("#")]),e._v(" 1，初始化时期")]),e._v(" "),n("p",[e._v("createState, initState")]),e._v(" "),n("h4",{attrs:{id:"_2-更新期间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-更新期间"}},[e._v("#")]),e._v(" 2，更新期间")]),e._v(" "),n("p",[e._v("didChangeDependencies, build, didUpdateWidget")]),e._v(" "),n("h4",{attrs:{id:"_3-销毁期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-销毁期"}},[e._v("#")]),e._v(" 3，销毁期")]),e._v(" "),n("p",[e._v("deactivate, dispose")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// stful + enter 快速搭建一个dart结构文件\n// 引入依赖  option+enter\nimport 'package:flutter/material.dart';\nclass WidgetLifecycle extends StatefulWidget {\n    @override\n    _WidgetLifecycleState createState()=> _WidgetLifecycleState();\n}\nclass _WidgetLifecycleStateState extends State<WidgetLifecycleState> {\n  int _count = 0;\n  @override\n  // 做初始化工作(channel初始化，监听器的初始化等)\n  void initState(){\n    print('-----initState----');\n    super.initState();\n  }\n  // 当依赖的state对象改变时会调用\n  // 1, 在initState()之后立即调用\n  // 2, 如果StatefullWidgets依赖于InheritedWidget，那么当前State所依赖的InheritedWidget中的变量改变时会再次调用\n  @override\n  void didChangeDependencies(){\n    print('----didChangeDependencies----');\n    super.didChangeDependencies();\n  }\n  // 在didChangeDependencies()之后立即调用；\n  // 另外在调用setState后也会再次调用该方法；\n  @override\n  Widget build(BuildContext context){\n    print('----build----');\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Flutter页面生命周期'),\n        leading: BackButton(),\n      ),\n      body: Center(\n        child: Column(\n          children: <Widget>[\n            RaisedButton(\n              onPressed: (){\n                setState((){\n                  _count += 1;\n                });\n              },\n              child: Text(\n                \"点我\",\n                style: TextStyle(fontSize: 26),\n              ),\n            ),\n            Text(_count.toString()),\n          ],\n        ),\n      ),\n    );\n  }\n  // command + n  重写方法  搜索到想重写的方法\n  // 很少使用，当父组件需要重新绘制的时候才调用\n  void didUpdateWidget(WidgetLifecycle oldWidget){\n      print('--------didUpdateWidget------');\n      super.didiUpdateWidget(oldWidget);\n      // if(oldWidget.xxx != widget.xxx) ....\n  }\n  // 很少使用，当组件被移除时调用在dispose之前调用\n  @override\n  void deactivate(){\n      print('----------deactivate---------');\n      super.deactivate();\n  }\n  // 常用，组件被销毁时调用\n  // 通常在该方法中执行一些资源的释放：监听器的卸载，channel的销毁等\n  @override\n  void dispose(){\n    print('----dispose----');\n    super.dispose();\n  }\n}\n")])])]),n("h2",{attrs:{id:"app-生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#app-生命周期"}},[e._v("#")]),e._v(" App 生命周期")]),e._v(" "),n("p",[n("img",{attrs:{src:a(375),alt:"flutter-app-lifecycle.png"}})]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("// 用WidgetsBindingObserver来获取Flutter应用维度的生命周期\nimport 'package:flutter/material.dart';\nclass AppLifeCycle extends StatefulWidget{\n    @override\n    _AppLifeCycleState createState()=>_AppLifeCycleState();\n}\nclass _AppLifeCycleState extends State<AppLifeCycle> with WidgetsBindingObserver{\n    @override\n    void initState(){\n        WidgetsBinding.instance.addObserver(this);\n        super.initState();\n    }\n    @override\n    Widget build(BuildContext context){\n        return Scaffold(\n            appBar: AppBar(\n                title: Text('Flutter应用生命周期'),\n                leading: BackButton(),\n            ),\n            body: Container(\n                child: Text('Flutter应用生命周期'),\n            )\n        );\n    }\n    @override\n    void didChangeAppLifecycleState(AppLifecycleState state){\n        super.didChangeAppLifecyclesState(state);\n        print('state = $state');\n        if(state == AppLifecycleState.paused){\n          print('App进入后台');\n        } else if(state ==AppLifecycleState.resumed){\n          print('App进入前台');\n        } else if(state == AppLifecycleState.inactive){\n          // 不常用：应用处于非活动状态，并且未接收到用户输入时调用，比如： 打电话\n        } else if(state == AppLifecycleState.suspending){\n          // 不常用，ios不会触发，应用被挂起的时候触发\n        }\n    }\n    @override\n    void dispose(){\n        WidgetsBinding.instance.removeObserver(this);\n        super.dispose();\n    }\n}\n")])])])])}),[],!1,null,null,null);t.default=i.exports}}]);