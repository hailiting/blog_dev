(window.webpackJsonp=window.webpackJsonp||[]).push([[185],{593:function(t,a,e){"use strict";e.r(a);var n=e(44),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"基于react-natigation的-app-导航框架搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于react-natigation的-app-导航框架搭建"}},[t._v("#")]),t._v(" 基于"),e("code",[t._v("react-natigation")]),t._v("的 App 导航框架搭建")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install -g expo-cli\nexpo init AwesomeProject\ncd AwesomeProject\nnpm start # expo start\nnpm run android\nnpm run ios\n")])])]),e("h2",{attrs:{id:"reactnative-提供了哪些能力"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reactnative-提供了哪些能力"}},[t._v("#")]),t._v(" ReactNative 提供了哪些能力")]),t._v(" "),e("ul",[e("li",[t._v("基于原生 UI 组件（不用 html 标签，自有一套原生组件）")]),t._v(" "),e("li",[t._v("手势识别（调用系统提供的一些功能-网页没有这个能力）")]),t._v(" "),e("li",[t._v("基于 FlexBox 的 css 布局模式（只认识 FlexBox 布局）")]),t._v(" "),e("li",[t._v("跨平台开发 多平台 - uni-app(基于 vue)")]),t._v(" "),e("li",[t._v("基于 React，jsx 的组件开发模式")]),t._v(" "),e("li",[t._v("可使用 npm 中的模块")]),t._v(" "),e("li",[t._v("Chrome Dev Tool")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var Hello = React.createClass({\n    render: function(){\n        return <Text>Hello React Native</Text>\n    }\n})\n")])])]),e("h2",{attrs:{id:"环境安装总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境安装总结"}},[t._v("#")]),t._v(" 环境安装总结")]),t._v(" "),e("ul",[e("li",[t._v("安装 Homebrew // 包管理器")]),t._v(" "),e("li",[t._v("brew install node")]),t._v(" "),e("li",[t._v("brew install watchman // 监视文件变化")]),t._v(" "),e("li",[t._v("brew install flow // 检测 jsx 语法")]),t._v(" "),e("li",[t._v("npm install -g react-native-cli // reactNative 的客户端形式")]),t._v(" "),e("li",[t._v("react-native init appname // 初始化项目")]),t._v(" "),e("li",[t._v("react-native run-ios/ open ***.xcodeproj 启用 ios 模拟器")])]),t._v(" "),e("h2",{attrs:{id:"启动运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动运行"}},[t._v("#")]),t._v(" 启动运行")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('Run instructions for ios:\n    cd "*/myappv1" && npx react-native run-ios\n    or\n    • Open myappv1/ios/myappv1.xcworkspace in Xcode or run "xed -b ios"\n    • Hit the Run button\n\nRun instructions for Android:\n    • Have an Android emulator running (quickest way to get started), or a device connected.\n    • cd "*/myappv1" && npx react-native run-android\n')])])]),e("h2",{attrs:{id:"image-组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#image-组件"}},[t._v("#")]),t._v(" Image 组件")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import { Image } from 'react-native';\n<Images syle={{\n    height: 100,\n    width: 500,\n    resizeMode: 'stretch',\n    justifyContent: 'center',\n    alignItems: 'center'\n}}>\n")])])]),e("p",[t._v("tips:\nfilename/filename.xib 启动页设置\nfilename/Images.xcassets 图标设置")]),t._v(" "),e("h2",{attrs:{id:"text-组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#text-组件"}},[t._v("#")]),t._v(" Text 组件")]),t._v(" "),e("p",[e("code",[t._v("Text")]),t._v("可以套"),e("code",[t._v("Text")]),t._v("\n使用"),e("code",[t._v("numberOfLines")]),t._v("属性设置文本长度限制")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<Text numberOfLines={5}>\n ....\n</Text>\n")])])]),e("h2",{attrs:{id:"cordova"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cordova"}},[t._v("#")]),t._v(" Cordova")]),t._v(" "),e("h3",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),e("ul",[e("li",[t._v("一个移动开发框架")]),t._v(" "),e("li",[t._v("将 HTML, CSS, JS 封装为原生 APP(Hybrid)")])])])}),[],!1,null,null,null);a.default=s.exports}}]);