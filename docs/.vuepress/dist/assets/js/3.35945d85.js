(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{153:function(e,s,r){"use strict";r.r(s);var n=r(0),t=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"express基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#express基础","aria-hidden":"true"}},[e._v("#")]),e._v(" Express基础")]),r("h4",{attrs:{id:"一：express的核心特性："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一：express的核心特性：","aria-hidden":"true"}},[e._v("#")]),e._v(" 一：express的核心特性：")]),r("p",[e._v("1，可以设置中间件来响应HTTP请求\n2，定义了路由表用于执行不同的HTTP请求动作\n3，可以通过向模板传递参数来动态渲染HTML页面")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("var express = require('express');\nvar app = express();\napp.get('/',function(req,res){\n  res.send('hello world')\n})\n//  启动服务\nvar server= app.listen(8081,function(){\n  var host = server.address().address;\n  var port = server.address().port;\n  console.log(\"应用实例，访问地址为http://%s:%s\",host,port)\n})\n")])])]),r("h4",{attrs:{id:"二，请求和响应的一些参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二，请求和响应的一些参数","aria-hidden":"true"}},[e._v("#")]),e._v(" 二，请求和响应的一些参数")]),r("h5",{attrs:{id:"supervisor-热启动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#supervisor-热启动","aria-hidden":"true"}},[e._v("#")]),e._v(" supervisor  => 热启动")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("app.get('/', function (req, res) {\n   res.send('qweqw'+req.query.username);\n})\napp.get('/:id',function(req,res){\n\tres.send('hello'+req.params.id);\n  res.json({\n    id: res.params.id\n  })\n})\n")])])]),r("h5",{attrs:{id:"request-和-response对象的具体介绍："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#request-和-response对象的具体介绍：","aria-hidden":"true"}},[e._v("#")]),e._v(" request 和 response对象的具体介绍：")]),r("h6",{attrs:{id:"request-对象-（表示http请求，包含请求查询字符串，参数，内容，http头部等属性）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#request-对象-（表示http请求，包含请求查询字符串，参数，内容，http头部等属性）","aria-hidden":"true"}},[e._v("#")]),e._v(" request 对象 （表示HTTP请求，包含请求查询字符串，参数，内容，HTTP头部等属性）")]),r("p",[e._v("1，req.app  当callback为外部文件时，用req.app访问express实例\n2，req.baseUrl: 获取路由当前安装的URL路径\n3，req.body / req.cookies: 获得[请求体] / Cookies\n4，req.fresh / req.stale: 判断请求是否还【新鲜】\n5，req.hostname / req.ip: 获取主机名和IP地址\n6，req.originalUrl: 获取原始请求URL\n7，req.params: 获取路由的parameters\n8，req.path: 获取请求路径\n9，req.protocol: 获取协议类型\n10，req.query: 获取URL的查询参数串\n11，req.route: 获取当前匹配的路由\n12，req.subdomains: 获取子域名\n13，req.accepts(): 检查可接受的请求的文档类型\n14，req.acceptsCharsets / req.acceptsEncodings / req.acceptsLanguages: 返回指定字符集的可接受字符编码\n15，req.get(): 获取指定HTTP的请求体\n16，req.is(): 判断请求头Content-Type的MIME类型")]),r("h6",{attrs:{id:"response-对象-（表示http响应，即在接收到请求时向客户端送的http响应数据）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#response-对象-（表示http响应，即在接收到请求时向客户端送的http响应数据）","aria-hidden":"true"}},[e._v("#")]),e._v(" response 对象 （表示HTTP响应，即在接收到请求时向客户端送的HTTP响应数据）")]),r("p",[e._v("1，res.app: 同上\n2，app.append(): 追加指定HTTP头\n3，res.set()在res.append()后将重置之前的设置头\n4，res.cookie(name,value[,option]): 设置Cookie\n5，opition: domain / expires / httpOnly / maxAge / path / secure / signed\n6，res.clearCookie(): 清除cookie\n7，res.download(): 传送指定路径文件\n8，res.get(): 返回指定的HTTP头\n9，res.json(): 传送JSON响应\n10，res.jsonp(): 传送JSONP响应\n11，res.location(): 只设置响应的Location HTTP头，不设置状态码或close response\n12，res.redirect(): 设置响应的Location HTTP头，并设置状态码302\n13，res.render(view,[loacals],callback): 渲染一个view同时向callback传递渲染后的字符串，如果渲染过程中有错误发生next(err)将会被自动调用。callback将会被传入一个可能发生的错误以及渲染后的页面，这样就不会自动输出了。\n14，res.send(): 传送HTTP响应\n15，res,sendFeil(path[,options][,fn]): 传送指定路径文件 -会自动根据文件extension设定Content-Type\n16，res.set(): 设置HTTP头，传入object可以一次设置多个头\n17，res.status(): 设置HTTP状态码\n18，res.type(): 设置Content-Type的MIME类型")]),r("h4",{attrs:{id:"路由"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由","aria-hidden":"true"}},[e._v("#")]),e._v(" 路由")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("var express = require('express');\nvar app = express();\n// 主页\napp.get('/',function(req,res){\n  res.send('Get Hello')\n  console.log('index get')\n})\n// post 请求\napp.post('/',function(req,res){\n  console.log('主页post请求');\n  res.send('Hello post')\n})\n// /del_user 页面响应\napp.get('/del_user',function(req,res){\n  console.log('/del_user Get 请求');\n  res.send('删除页面');\n})\n// post 请求\napp.post('/del_user',function(req,res){\n  console.log('主页post请求');\n  res.send('Hellasdasdo post')\n})\nvar server = app.listen(8081, function(){\n  \x3c!-- var host = server.address().address\n  var port = server.address().port --\x3e\n  console.log(213)\n})\n")])])]),r("h5",{attrs:{id:"静态文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#静态文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 静态文件")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("var express = require('express');\nvar app = express();\napp.use(express.static('public'));\napp.get('/',function(req,res){\n  res.send('Hello World');\n})\nvar server = app.listen(8081,function(){\n  var host = server.address().address\n  var port = server.address().port\n  console.log(host)\n})\n")])])]),r("h5",{attrs:{id:"get方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#get方法","aria-hidden":"true"}},[e._v("#")]),e._v(" GET方法")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('// index.html\n<html>\n  <style src="styleSheels/index.css"\n  <body>\n    <form action="http://192.168.1.166/process_get" method = "GET">\n      First name: <input type="text" name = "first_name"><br/>\n      last name: <input type="text" name = "last_name"><br/>\n      <input type = "submit" value="Submit">\n    </form>\n  </body>\n</html>\n// server.js\nvar express = require(\'express\');\nvar app = express();\n\napp.use(express.static(\'public\'));\n\napp.get(\'/index.html\', function (req, res) {\n\tres.sendFile(__dirname+\'/views/\'+\'index.html\')\n})\n\nvar server = app.listen(8081, function () {\n \n  var host = server.address().address\n  var port = server.address().port\n \n  console.log("应用实例，访问地址为 http://%s:%s", host, port)\n \n})\n')])])]),r("h5",{attrs:{id:"post方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#post方法","aria-hidden":"true"}},[e._v("#")]),e._v(" POST方法")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('// index.html\n<html>\n  <link rel="stylesheet" href="stylesheels/index.css">\n  <body>\n    <form action="http://192.168.1.166:8081/process_post" method = "POST">\n      First name: <input type="text" name = "first_name"><br/>\n      last name: <input type="text" name = "last_name"><br/>\n      <input type = "submit" value="Submit">\n    </form>\n  </body>\n</html>\n\n\n\n// app.js\nvar express = require(\'express\');\nvar app = express();\nvar bodyParser = require(\'body-parser\');\n\n// 创建 application/x-www-form-urlencoded 编辑解析\nvar urlencodedParser = bodyParser.urlencoded({\n    extended: false\n})\napp.use(express.static(\'public\'));\n\napp.get(\'/index.html\', function(req, res) {\n    res.sendFile(__dirname + \'/views/\' + \'index.html\')\n})\napp.post(\'/process_post\', urlencodedParser, function(req, res) {\n    var response = {\n        "first_name": req.body.first_name,\n        "last_name": req.body.last_name\n    }\n    console.log(response);\n    res.end(JSON.stringify(response));\n})\n\n\nvar server = app.listen(8081, function() {\n\n    var host = server.address().address\n    var port = server.address().port\n    console.log("应用实例，访问地址为 http://%s:%s", host, port)\n})\n')])])]),r("h5",{attrs:{id:"文件上传"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文件上传","aria-hidden":"true"}},[e._v("#")]),e._v(" 文件上传")]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("// index.html\n\n")])])])])}],!1,null,null,null);s.default=t.exports}}]);