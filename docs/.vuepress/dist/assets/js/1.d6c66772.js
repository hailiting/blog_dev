(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{155:function(t,e,a){"use strict";a.r(e);var s=a(0),n=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"http协议那些事"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http协议那些事","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP协议那些事")]),a("blockquote",[a("p",[t._v("当我们输入网址后发生了什么\nHTTP协议详解\nHTTP协议安全\n后台服务与HTTP\n反向代理与WEB服务")])]),a("h4",{attrs:{id:"http请求模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http请求模型","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP请求模型")]),a("p",[t._v("Client ->   请求 -> Server -> 响应 -> Client")]),a("h4",{attrs:{id:"浏览器行为与http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器行为与http协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器行为与HTTP协议")]),a("p",[t._v("处理流程：\n1，user 输入网址并回车\n2，浏览器收到指令，先看网络通不通，先通过防火墙（猫拨号，路由器控制猫）\n3，找到DNS服务器，找到服务器地址\n4，在网路上（通过透明设备），通过多个路由器\n5，找到对应IP地址（可能有多个服务器）\n6，找到对应服务器，浏览器向服务器询问登录，服务器做验证，返回一段字符串\n7，经过若干个路由\n8，到达浏览器，渲染到页面上\n（DNS服务器在互联网上）\n猫是内网和电信服务器之间做一个链路，路由器是获取一些配置（DNS的IP地址，所以DNS域名是预先配置好的）")]),a("h4",{attrs:{id:"什么是http协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是http协议","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是HTTP协议")]),a("p",[t._v("1，HTTP是超文本传输协议，从www浏览器传输到本地浏览器的一种传输协议，网站是基于HTTP协议的，例如网站图片，css，js等都是基于HTTP协议进行传输的。\n是特定套路的拿东西的协议\n2，HTTP是一种约束和规范，从客户端请求（request）和从服务器响应（response）")]),a("h4",{attrs:{id:"了解tcp-ip协议栈（栈-》数据结构里的栈相似，分层）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#了解tcp-ip协议栈（栈-》数据结构里的栈相似，分层）","aria-hidden":"true"}},[t._v("#")]),t._v(" 了解TCP/IP协议栈（栈-》数据结构里的栈相似，分层）")]),a("p",[t._v("ISO：应用层，表示层，回话层，传输层，网络层，数据链路层，物理层\nTCP/IP：应用层，传输层，网络层，网络接口层\n1，应用层\n为用户提供所需要的各种服务，例如：HTTP(超文本传输协议),FTP(文件传输协议),DNS(域名系统),SMTP(邮件传输协议)等\n2，传输层（TCP - 保持连接的协议 三次握手， UDP - 不可靠，送不到也不知道）\n为应用层实体提供端到端的通信功能，保证数据包的顺序传达及数据的完整性\n3，网络层（IP 涉及到协议-主要管IP地址怎么形成，怎么得到）\n主要解决主机到主机的通信问题。IP协议是国际互联网最重要的协议。\n4，网络接口层（和硬件相关的）-》 网络工程师\n负责监视数据在主机和网络之间的交换")]),a("p",[t._v("HTTP和HTTPS是链路上加密（TLS&&SSL 会话层）了\nHTTP默认端口是80\nHTTPS默认端口是443\n广泛使用的是HTTP1.1")]),a("h4",{attrs:{id:"http的工作过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http的工作过程","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP的工作过程")]),a("p",[t._v("一次HTTP操作称为一个事务(1，一步或多步组合完成起来的一件事，2，其中一个事务失败了，整个失败，3，可以 回滚），其过程可分为四步：\n1，TCP 客户机与服务器建立连接（网络不通 err_connection_timed_out）\n2，HTTP IP 建立连接（错误码）\n3，HTTP 服务器接到请求（错误码）\n4，TCP 客户端收到服务器返回的信息并显示（网络不通）")]),a("h4",{attrs:{id:"请求和响应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求和响应","aria-hidden":"true"}},[t._v("#")]),t._v(" 请求和响应")]),a("p",[t._v("1，HTTP请求：请求行、消息报头、请求正文\n2，HTTP响应：状态行、消息报头，响应正文\nGeneral: (把response和request一部分提出来)\nRequest URL(请求)\nRemote Address(ip地址+端口号  DNS解析后得到的地址)\nRequest（请求）：\nAccept(浏览器能接受什么类型的资源)\nAccept-Encoding(编码，数据的格式 gzip...)\nAccept-Language\nCache-Control(缓存)\nConnection(连接-长 || 短  IO 输入输出 效率低)\nCookie（把本地cookie发到服务器上）\nhost：网站的域名\nPragma(缓存相关的)\nUser-Agent(告诉服务器是什么浏览器)\nReferer (跟踪用户访问的顺序，判断资源来自哪个网站)")]),a("p",[t._v("Response Header:\nCach-Control(缓存)\ndate/expires (缓存)\nserver(所用的服务器)\nset-Cookie  (给客户端、浏览器的时候)")]),a("h4",{attrs:{id:"http状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http状态码","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP状态码")]),a("p",[t._v("1，1xx 提示信息  异步处理  请求已接收到，但没时间处理，需要等待\n2，2xx 服务器处理了 204 服务器接收 处理了，没有内容\n3，3xx 重定向，请求必须进行更进一步的操作，原来资源在这，被转移了\n4，4xx 客户端错误 构建的数据有问题\n5，5xx 服务器错误")]),a("h4",{attrs:{id:"请求方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 请求方法")]),a("p",[t._v("1, GET\n2, POST\n3, HEAD(和get差不多，不返回内容)\n4, PUT(向服务器加内容)\n5, DELETE\n6, TRACE\n7, CONNECT\n8, OPTIONS")]),a("h4",{attrs:{id:"cookie-session"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cookie-session","aria-hidden":"true"}},[t._v("#")]),t._v(" cookie  && session")]),a("p",[t._v("http是无状态协议（服务器和客户端在通信的时候，并不知道服务器是谁，依靠cookie和session解决）\n1，Cookie是保存在客户端的小段文本，随客户端点每一个请求发送该url下的所有cookie到服务器端\n2，Session则保存在服务器端，通过唯一的值sessionID来区别每一个用户。SessionID随每个连接请求发送到服务器，服务器感觉sessionID来识别客户端，在通过session的key获取session值。\ncookie一般情况下是服务器生成，通过response返回到客户端来\nsession（会话） 一般保存在服务器端，sessionID相当于服务器给客户端发的一个身份证，\n客户端第一次请求 -》 服务器 响应，发现没有身份，就返回一个身份给客户端，客户端Set-Cookie:sessionID=xxx -》客户端请求（携带了cookie(cookie里有session)）-》服务器响应\ntoken（令牌）可以加在url，token也是一种凭据。")]),a("h4",{attrs:{id:"缓存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 缓存机制")]),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1338363-f610030c013da0c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"浏览器缓存机制"}})]),a("h4",{attrs:{id:"http的链路安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http的链路安全","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP的链路安全")]),a("p",[t._v("1，加密重要数据\n2，对非重要数据签名（hash...）\n3，使用安全连接HTTPS协议（链路加密）")]),a("h4",{attrs:{id:"http2：下一代标准"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http2：下一代标准","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP2：下一代标准")]),a("p",[t._v("1，使用二进制格式传输，更高效、更紧凑\n2，对报头压缩，降低开销\n3，多路复用，一个网络连接实现并行请求\n4，服务器主动推送，减少请求的延迟\nhttp与https\nhttp: TCP + HTTP\nhttps: TCP + TLS + HTTP\nWebsocket: TCP+WS\nWebsockets: TCP+TLS+WS")]),a("h4",{attrs:{id:"http与反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http与反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP与反向代理")]),a("p",[t._v("1，什么是代理，什么又是反向代理\n2，为什么要使用反向代理？\n3，都有哪些反向代理服务器\n"),a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1338363-01538982a3fbe76d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"代理"}})]),a("h5",{attrs:{id:"反向代理的用途"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理的用途","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向代理的用途")]),a("p",[t._v("1，加密和SSL加速\n2，负载均衡\n3，缓存静态内容\n4，压缩\n5，减速上传\n6，安全\n7，外围法布")]),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/1338363-807ac5ea63c66364.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"反向代理负载均衡"}}),t._v("\n高速缓存放置一些常用资源")]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ping www.baidu.com\n// ping 是否连网   百度dns代理地址\n")])])])])}],!1,null,null,null);e.default=n.exports}}]);